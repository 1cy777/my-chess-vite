import React from "react";
import { MoveInfo } from "@/models/MoveInfo";
import { Colors } from "@/models/Colors";
import { Figure } from "@/models/figures/Figure";

interface Props {
  history: MoveInfo[];
  onSelect: (index: number) => void;
  activeIndex: number;
  lostWhiteFigures: Figure[];
  lostBlackFigures: Figure[];
}

const HistoryPanel: React.FC<Props> = ({
  history,
  onSelect,
  activeIndex,
}) => {
  /** –≥—Ä—É–ø—É—î–º–æ –ø–æ –ø–∞—Ä–∞—Ö, –ø—Ä–æ–ø—É—Å–∫–∞—é—á–∏ undefined */
  const grouped = history.reduce<
    {
      white: MoveInfo | null;
      black: MoveInfo | null;
      whiteIndex: number | null;
      blackIndex: number | null;
    }[]
  >((acc, move, i) => {
    if (!move) return acc; // üõ°Ô∏è  –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ ¬´–¥—ñ—Ä–∫–∏¬ª

    // —è–∫—â–æ –±—ñ–ª–∏–π ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –ø–∞—Ä—É
    if (move.color === Colors.WHITE) {
      acc.push({
        white: move,
        black: null,
        whiteIndex: i,
        blackIndex: null,
      });
    } else {
      // —á–æ—Ä–Ω–∏–π ‚Äî –¥–æ–ø–∏—Å—É—î–º–æ –≤ –æ—Å—Ç–∞–Ω–Ω—é –ø–∞—Ä—É –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É
      const last = acc.at(-1);
      if (last && last.black == null) {
        last.black = move;
        last.blackIndex = i;
      } else {
        acc.push({
          white: null,
          black: move,
          whiteIndex: null,
          blackIndex: i,
        });
      }
    }
    return acc;
  }, []);

  return (
    <div className="history-panel p-3">
      <h2 className="font-bold mb-1">–Ü—Å—Ç–æ—Ä—ñ—è —Ö–æ–¥—ñ–≤</h2>

      <table className="text-sm">
        <thead>
          <tr>
            <th className="pr-1">#</th>
            <th className="pr-2">–ë—ñ–ª—ñ</th>
            <th>–ß–æ—Ä–Ω—ñ</th>
          </tr>
        </thead>
        <tbody>
          {grouped.map(({ white, black, whiteIndex, blackIndex }, idx) => (
            <tr key={idx}>
              <td className="pr-1">{idx + 1}.</td>

              <td
                className={`cursor-pointer px-1 ${
                  activeIndex === whiteIndex ? "bg-blue-100 font-semibold" : ""
                }`}
                onClick={() =>
                  whiteIndex !== null && onSelect(whiteIndex)
                }
              >
                {white && `${fig(white.figure)} ${white.notation}`}
              </td>

              <td
                className={`cursor-pointer px-1 ${
                  activeIndex === blackIndex ? "bg-blue-100 font-semibold" : ""
                }`}
                onClick={() =>
                  blackIndex !== null && onSelect(blackIndex)
                }
              >
                {black && `${fig(black.figure)} ${black.notation}`}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

/** –ü–æ–≤–µ—Ä—Ç–∞—î —é–Ω—ñ–∫–æ–¥‚Äë—Ñ—ñ–≥—É—Ä—É –¥–ª—è SAN‚Äë—Å–∏–º–≤–æ–ª—É */
function fig(name: string): string {
  const map: Record<string, string> = {
    K: "‚ôî",
    Q: "‚ôï",
    R: "‚ôñ",
    B: "‚ôó",
    N: "‚ôò",
    P: "‚ôô",
  };
  return map[name] ?? "";
}

export default HistoryPanel;
